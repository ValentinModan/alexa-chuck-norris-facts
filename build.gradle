import com.amazonaws.services.lambda.model.Runtime
import jp.classmethod.aws.gradle.lambda.AWSLambdaMigrateFunctionTask

plugins {
    id "com.github.johnrengelman.shadow" version "4.0.4"
    id "jp.classmethod.aws.lambda" version "0.38"
    id "java"
}

group = 'chuck-norris-facts'
version = '1.0'

compileJava {
    targetCompatibility = 1.8
    sourceCompatibility = 1.8
}

repositories {
    jcenter()
}

dependencies {
    compile "com.amazon.alexa:ask-sdk:$alexasdkVersion"
    compile "io.micronaut:micronaut-http-client:$micronautVersion"

    compile 'log4j:log4j:1.2.17'
    compile 'org.slf4j:slf4j-api:1.7.10'
    compile 'com.amazonaws:aws-lambda-java-log4j:1.0.0'
}

task buildZip(type: Zip) {
    from compileJava
    from processResources
    into('lib') {
        from configurations.runtime
    }
}

aws {
    region = 'eu-west-1'
}

if (new File("${System.getProperty("user.home")}/.aws/credentials").exists()) {
    task deploy(type: AWSLambdaMigrateFunctionTask, dependsOn: build) {
        functionName = "alexa-chuck-norris-facts"
        handler = "chucknorrisfacts.ChuckStreamHandler"
        role = "arn:aws:iam::${aws.accountId}:role/lambda_basic_execution"
        runtime = Runtime.Java8
        zipFile = shadowJar.archivePath
        memorySize = 512
        timeout = 60
    }
}

build.dependsOn shadowJar

